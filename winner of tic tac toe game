class Solution {
    public String tictactoe(int[][] moves) {
        int n = moves.length;
        //creating a board 
       char [][]board = new char[3][3];
       for( int i  = 0;i < 3;i++){
           for( int j = 0;j<3;j++){
               board[i][j] = '.';
           }
       } //giving X and O meaning 
       for( int i  = 0;i < n;i++){
          
               if(i % 2 == 0){
                   board[moves[i][0]][moves[i][1] ] = 'X';
               }
               else  board[moves[i][0]][moves[i][1] ] = 'O';
       }
       //checking cols
       for( int j = 0;j < 3;j++){
           int countA =0;
           int countB =0;

           for( int i = 0;i<3;i++){
               if(board[i][j]== 'X' ){
                   countA++;
               }
               else if(board[i][j] == 'O'){
                   countB++;
               }
           }
           if(countA ==3)return "A";
           else if(countB ==3)return "B";
       }


    //checking rows
    for(int j = 0;j<3;j++){
        int countA = 0;
        int countB =0;

        for( int i = 0;i< 3;i++){
            if(board[j][i] =='X'){
                countA++;
            }
            else if(board[j][i] == 'O'){
                countB++;
            }

        }
        if(countA ==3)return "A";
        else if(countB ==3)return "B";


    }//checking diagonals
    //diagonal 1
    if(board[0][0]=='X' && board[1][1]=='X' && board[2][2]=='X' )return "A";
    else if(board[0][0]=='O' && board[1][1]=='O' && board[2][2]=='O' )return "B";
       
    //diagonal 2
    if(board[2][0]=='X' && board[1][1]=='X' && board[0][2]=='X' )return "A";
    else if(board[2][0]=='O' && board[1][1]=='O' && board[0][2]=='O' )return "B";
          

     //checking for draw
    int d = 0;
    for( int i = 0;i<3;i++){
        for( int j = 0;j<3;j++){
            if(board[i][j] == 'X' || board[i][j] == 'O')d++;

        }
    }
    if(d != 9){
        return "Pending";
    }
    else return "Draw";



}
}
